services:
  api:
    build:
      context: api
      dockerfile: Dockerfile.dev
      args:
        API_PORT: ${API_PORT}
        POETRY_VERSION: ${POETRY_VERSION}
        MAILCTL_VERSION: ${MAILCTL_VERSION}
        MSMTP_VERSION: ${MSMTP_VERSION}
        MAILCTL_SERVICES: ${MAILCTL_SERVICES}
        MAILCTL_ACCOUNT: ${MAILCTL_ACCOUNT}
        KEY_ID: ${KEY_ID}
        PRIVATE_KEY: /run/secrets/gpg_private
        MSMTP_HOST: ${MSMTP_HOST}
        MSMTP_PORT: ${MSMTP_PORT}
        MSMTP_AUTH: ${MSMTP_AUTH}
        MSMTP_FROM: ${MSMTP_FROM}
        MSMTP_USER: ${MSMTP_USER}
        MSMTP_EVAL: ${MSMTP_EVAL}
      secrets:
        - gpg_private
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      API_PORT: "${API_PORT}"
      SECRET_KEY: /run/secrets/api_secret
      MAILCTL_TOKEN: ${MAILCTL_TOKEN}
    secrets:
      - api_secret
      - gpg_private
    volumes:
      - ./api/src:/app/src
      - ${MAILCTL_TOKEN}:/app/mail/token.auth
  client:
    build:
      context: client
      dockerfile: Dockerfile.dev
      args:
        CLIENT_PORT: ${CLIENT_PORT}
        API_URL: "http://api:${API_PORT}"
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    environment:
      API_URL: "http://api:${API_PORT}"
    depends_on:
      - api
    volumes:
      - ./client:/app
      - ./client/node_modules:/app/node_modules
  updater:
    build:
      context: updater
      dockerfile: Dockerfile
      args:
        ENDPOINT: ${API_ENDPOINT}
        POETRY_VERSION: ${POETRY_VERSION}
    environment:
      API_USER: ${API_USER}
      API_PASSWORD: /run/secrets/api_password
      API_ENDPOINT: "http://api:${API_PORT}"
    depends_on:
      - api
    secrets:
      - api_password
    networks:
      - internal

secrets:
  api_secret:
    file: ${API_SECRET_FILE}
  gpg_private:
    file: ${GPG_SECRET_KEY_FILE}
  api_password:
    file: ${API_PASSWORD_FILE}
